---
- name: Fetch Incident and Update Incident fields data from ServiceNow
  hosts: localhost
  gather_facts: no
  vars:
    #short_Descriptions: "{{ short_Descriptions }}"
    mysql_query: "SELECT * FROM incidentdata.incidentConfigDetails;;"
    #file_path: "inputValidationUsecasePayload1.txt"
    impacted_ci_List: []
    ticketType: "e2e"
    incident_data_validator: "{{ incident_data_validator }}"
    ci_name: "CI-001"  # harcoding ci_name , change it later 
    alert_type_matched: []
    

  tasks:

    - name: Display the incident data received from poller
      debug:
        var:  incident_data_validator
        
    # - name: Read data from payload file
    #   slurp:
    #     src: "{{ file_path }}"
    #   register: file_content

    # - name: Convert file content to JSON
    #   set_fact:
    #     json_data: "{{ file_content.content | b64decode | from_json }}"

    # - name: Display the file data
    #   debug:
    #     var: json_data

    - name: Extract Incident-number using json_query
      set_fact:        
        incident_number: "{{ incident_data_validator['Incident-number'] }}"
    
    - name: Display the Incident-number
      debug:
        var: incident_number



    # - name: Extract Impacted CI 
    #   set_fact:
    #    impacted_ci_List: "{{ incident_data_validator.incident | json_query('impactedCi') }}"
      

    # - name: Display the impacted ci 
    #   debug:
    #     var: impacted_ci_List


    - name: Get The cmdb details 
      include_tasks: mysql_query_playbook-Harsh.yml
      #loop: "{{ impacted_ci_List }}"
      #loop_control:
        #loop_var: impacted_ci
      vars:  
        query: "SELECT ci_name , credId FROM incidentdata.ci_details ci INNER JOIN incidentdata.`credId-details` cr ON ci.os = cr.os and ci.dns_domain = cr.`prod-EU-Domain` and ci.credType = cr.credType  where ci_name = '{{ ci_name }}';"

    - name: Get the tickettypes
      include_tasks: mysql_query_playbook-Harsh.yml
      vars:  
        query: "select alertType from template_details where ticketType='{{ ticketType }}' ;"
      register: query_result

    - name: Extract alertType values from query_result
      set_fact:
        alert_types: "{{ query_result.query_result[0] | map(attribute='alertType') | list }}"

    - name: Display all the alert Types
      debug:
         var: alert_types

    #- name: Display the file data
      #debug:
        #var: alert_result.query_result[0][0].alertType

    - name: Loop through alert types and check for a match in JSON data
      set_fact:
       alert_type_matched: "{{ alert_type_matched | default([]) + [item] }}"
      loop: "{{ alert_types }}"
      loop_control:
       loop_var: item
      when: "item in incident_data_validator.short_description or item in incident_data_validator.description"  # adding or instead of and
     

    - name: Display the alertOutput
      debug:
        msg: Hiiiiiiiiiiiiii
   

    - name: Display the alertOutput
      debug:
        var: alert_type_matched

    - name: Loop through the alert_type_matched
      include_tasks: mysql_query_playbook-Harsh.yml
      vars:  
        query: "select tempId from template_details where alertType = '{{ alert_type_matched[0] }}' ;"
      register: query_result

    - name: Extract tempId values from query_result
      set_fact:
        tempId_List: "{{ query_result.query_result[0] | map(attribute='tempId') | list }}"

    - name: Display all the tempId
      debug:
         var: tempId_List
          
   
        
    
